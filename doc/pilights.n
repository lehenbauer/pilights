.TH pilights n 1.1 "Tcl-Extensions"
.HS pilights tcl
.BS
.SH NAME
pilights \- tcl interface to do fancy things with LED vectors.
.SH SYNOPSIS
\fBpackage require pilights\fR
.PP
\fBpilights create\fI objName nLights nRows\fR
.br
.PP
\fIobjName\fB nLights\fR
.br
\fIobjName\fB nRows\fR
.br
\fIobjName\fB fillrows\fI firstRow lastRow r g b\fR
.br
\fIobjName\fB fillpixels\fI row nPixels r g b\fR
.br
\fIobjName\fB write \fIrow ?nRows? ?delay?\fR
.br
\fIobjName\fB copyrows\fI firstRow destRow nRows\fR
.br
\fBobjName\fB copy_from_image\fI gdObject x y firstRow firstPixel nPixels\fR
.br
.SH DESCRIPTION
pilights gives Tcl programs the ability to generate sequences for RGB
lights and emit them over the SPI bus to stuff like the LPD8806 digital RGB LED strips.
.PP
The \fBpilights\fR command creates a new Tcl command, prepping it with
arrays of bytes for setting up and sending RGB values to many lights
very quickly.
.PP
A cool feature, it can take pixels from any image the GD library can
handle, including PNG, GIF and JPEG, and emit them.
.PP
Once an object has been created, it can be manipulated via its name,
or if the object name is \fB#auto\fR, a unique command name
is returned and should be grabbed into a variable and executed using a
reference to that variable, in the same manner as Incr Tcl.
.PP
.nf
    pilights create mylights 150 100
    mylights fill 0 100 0 0 255
.fo
.PP
.SH PILIGHTS OBJECT INTROSPECTION FUNCTIONS
.PP
\fIobjName\fB nLights\fR returns the number of lights defined, while
\fIobjName\fB nRows\fR returns the number of rows defined.

.SH PIXEL-PREPPING FUNCTIONS
.PP
\fIobjName\fB fillrows \fIfirstrow lastRow r g b\fR fills the specified rows with the specified RGB colors.  Use 8-bit colors.  They are mapped to 7-bit for emission to the string but we'll keep the interface 8-bit.
.PP
\fIobjName\fB fillpixels\fI row nPixels r g b\fR fills pixels within a row with RGB colors.  Use it multiple times to create patterns within a row.
.PP
\fIobjName\fB copyrows\fI firstRow destRow nRows\fR copies patterns one row to another.
.PP
fBobjName\fB copy_from_image\fI gdObject x y firstRow firstPixel nPixels\fR reads pixels from a GD library image (probably loaded from a PNG or GIF) using the tcl.gd package.  This allows pixel sequences of nearly unlimited size and complexity to be created and stored efficiently within PNG24 images.
.PP
Pixels are copied pixel-for-pixel.  If the number of pixels requested runs off the end of one row in the pilights object, copying continues with the first pixel of the next row.  Likewise if the row of pixels in the GD image runs out, pixels continued to be sourced from the Xth pixel in the next row.
.PP
More to come...
